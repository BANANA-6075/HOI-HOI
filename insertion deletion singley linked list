#include<iostream.h>
#include<conio.h>
#include<process.h>
struct node
{
int data;
struct node *link;
};

class list
{
struct node *head;
public:
list()
 {
head=NULL;
 }
voidinsertbeg(int item);
 
void display();

voiddelbeg();

};

void list :: insertbeg(int item)
  {
node *newnode = new node();
if(head==NULL)
    {
head= newnode;
newnode->data=item;
newnode->link=NULL;
    }
else
    {
newnode->data=item;
newnode->link=head;
head=newnode;
    }
  }


void list :: display()
  {
node *temp = new node();
if(head==NULL)
    {
cout<<"\n** Empty List **";
    }
else
  {
temp=head;
while(temp->link!=NULL)
    {
cout<<"\nDATA:"<<temp->data<<" ";
temp=temp->link;
    }
if(temp->link==NULL)
    {
cout<<"\nDATA:"<<temp->data<<" ";
    }

  }
  }


void list :: delbeg()
  {
node *temp = new node();
temp=head;
if(temp->link==NULL)
    {
cout<<"\nList is empty.";
exit(0);
    }
head=temp->link;
delete(temp);
  }



void main()
  {
list l;
intn,a,y,k,item;
clrscr();
do
   {
cout<<"\nMENU:\nINSERTION(1.Beginning)\nDELETION (2.beginning)\n3.Display\n4.Exit\nChoice: ";
cin>>n;
switch(n)
   {
case 1:cout<<"\nInsertion at the beginning:";
	cout<<"\nEnter data:";
	cin>>a;
	l.insertbeg(a);
	break;

case 2:cout<<"\nDeletion at Beginning:";
	l.delbeg();
	break;

case 3:l.display();
	break;
case 4:exit(0);
default: cout<<"\nINVALID OPTION";
	break;
   }
}while(1);
getch();
  }
